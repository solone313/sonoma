{"version":3,"file":"jwtStrategy.js","names":["_passport","_interopRequireDefault","require","_passportJwt","_User","obj","__esModule","default","isProduction","process","env","NODE_ENV","secretOrKey","JWT_SECRET_PROD","JWT_SECRET_DEV","jwtLogin","JwtStrategy","jwtFromRequest","ExtractJwt","fromHeader","payload","done","user","User","findById","id","err","passport","use"],"sources":["../../src/services/jwtStrategy.js"],"sourcesContent":["import passport from 'passport';\nimport { Strategy as JwtStrategy, ExtractJwt } from 'passport-jwt';\n\nimport User from '../models/User';\n\nconst isProduction = process.env.NODE_ENV === 'production';\nconst secretOrKey = isProduction ? process.env.JWT_SECRET_PROD : process.env.JWT_SECRET_DEV;\n\n// JWT strategy\nconst jwtLogin = new JwtStrategy(\n  {\n    jwtFromRequest: ExtractJwt.fromHeader('x-auth-token'),\n    secretOrKey,\n  },\n  async (payload, done) => {\n    try {\n      const user = await User.findById(payload.id);\n\n      if (user) {\n        done(null, user);\n      } else {\n        done(null, false);\n      }\n    } catch (err) {\n      done(err, false);\n    }\n  },\n);\n\npassport.use(jwtLogin);\n"],"mappings":";;AAAA,IAAAA,SAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AAEA,IAAAE,KAAA,GAAAH,sBAAA,CAAAC,OAAA;AAAkC,SAAAD,uBAAAI,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAElC,MAAMG,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY;AAC1D,MAAMC,WAAW,GAAGJ,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACG,eAAe,GAAGJ,OAAO,CAACC,GAAG,CAACI,cAAc;;AAE3F;AACA,MAAMC,QAAQ,GAAG,IAAIC,qBAAW,CAC9B;EACEC,cAAc,EAAEC,uBAAU,CAACC,UAAU,CAAC,cAAc,CAAC;EACrDP;AACF,CAAC,EACD,OAAOQ,OAAO,EAAEC,IAAI,KAAK;EACvB,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMC,aAAI,CAACC,QAAQ,CAACJ,OAAO,CAACK,EAAE,CAAC;IAE5C,IAAIH,IAAI,EAAE;MACRD,IAAI,CAAC,IAAI,EAAEC,IAAI,CAAC;IAClB,CAAC,MAAM;MACLD,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC;IACnB;EACF,CAAC,CAAC,OAAOK,GAAG,EAAE;IACZL,IAAI,CAACK,GAAG,EAAE,KAAK,CAAC;EAClB;AACF,CAAC,CACF;AAEDC,iBAAQ,CAACC,GAAG,CAACb,QAAQ,CAAC"}