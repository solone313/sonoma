{"version":3,"file":"User.js","names":["_fs","_interopRequireDefault","require","_path","_mongoose","_bcryptjs","_jsonwebtoken","_joi","_utils","_constants","obj","__esModule","default","Schema","mongoose","userSchema","provider","type","String","required","username","lowercase","unique","match","index","email","password","trim","minlength","maxlength","name","avatar","role","bio","messages","Types","ObjectId","ref","timestamps","console","log","join","__dirname","IMAGES_FOLDER_PATH","methods","toJSON","absoluteAvatarFilePath","isValidUrl","fs","existsSync","id","_id","createdAt","updatedAt","isProduction","process","env","NODE_ENV","secretOrKey","JWT_SECRET_PROD","JWT_SECRET_DEV","generateJWT","token","jwt","sign","expiresIn","registerUser","newUser","callback","bcrypt","genSalt","err","salt","hash","errh","save","comparePassword","candidatePassword","compare","isMatch","hashPassword","saltRounds","hashedPassword","Promise","resolve","reject","validateUser","user","schema","Joi","any","string","min","max","regex","allow","validate","exports","User","model","_default"],"sources":["../../src/models/User.js"],"sourcesContent":["import fs from 'fs';\nimport { join } from 'path';\nimport mongoose from 'mongoose';\nimport bcrypt from 'bcryptjs';\nimport jwt from 'jsonwebtoken';\nimport Joi from 'joi';\nimport { isValidUrl } from '../utils/utils';\nimport { IMAGES_FOLDER_PATH } from '../utils/constants';\n\nconst { Schema } = mongoose;\n\nconst userSchema = new Schema(\n  {\n    provider: {\n      type: String,\n      required: true,\n    },\n    username: {\n      type: String,\n      lowercase: true,\n      unique: true,\n      required: [true, \"can't be blank\"],\n      match: [/^[a-zA-Z0-9_]+$/, 'is invalid'],\n      index: true,\n    },\n    email: {\n      type: String,\n      lowercase: true,\n      unique: true,\n      required: [true, \"can't be blank\"],\n      match: [/\\S+@\\S+\\.\\S+/, 'is invalid'],\n      index: true,\n    },\n    password: {\n      type: String,\n      trim: true,\n      minlength: 6,\n      maxlength: 60,\n    },\n    name: String,\n    avatar: String,\n    role: { type: String, default: 'USER' },\n    bio: String,\n    messages: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Message' }],\n  },\n  { timestamps: true },\n);\n\nconsole.log(join(__dirname, '../..', IMAGES_FOLDER_PATH));\n\nuserSchema.methods.toJSON = function () {\n  // if not exists avatar1 default\n  const absoluteAvatarFilePath = `${join(__dirname, '../..', IMAGES_FOLDER_PATH)}${this.avatar}`;\n  const avatar = isValidUrl(this.avatar)\n    ? this.avatar\n    : fs.existsSync(absoluteAvatarFilePath)\n    ? `${IMAGES_FOLDER_PATH}${this.avatar}`\n    : `${IMAGES_FOLDER_PATH}avatar2.jpg`;\n\n  return {\n    id: this._id,\n    provider: this.provider,\n    email: this.email,\n    username: this.username,\n    avatar: avatar,\n    name: this.name,\n    role: this.role,\n    createdAt: this.createdAt,\n    updatedAt: this.updatedAt,\n  };\n};\n\nconst isProduction = process.env.NODE_ENV === 'production';\nconst secretOrKey = isProduction ? process.env.JWT_SECRET_PROD : process.env.JWT_SECRET_DEV;\n\nuserSchema.methods.generateJWT = function () {\n  const token = jwt.sign(\n    {\n      expiresIn: '12h',\n      id: this._id,\n      provider: this.provider,\n      email: this.email,\n    },\n    secretOrKey,\n  );\n  return token;\n};\n\nuserSchema.methods.registerUser = (newUser, callback) => {\n  bcrypt.genSalt(10, (err, salt) => {\n    bcrypt.hash(newUser.password, salt, (errh, hash) => {\n      if (err) {\n        console.log(err);\n      }\n      // set pasword to hash\n      newUser.password = hash;\n      newUser.save(callback);\n    });\n  });\n};\n\nuserSchema.methods.comparePassword = function (candidatePassword, callback) {\n  bcrypt.compare(candidatePassword, this.password, (err, isMatch) => {\n    if (err) return callback(err);\n    callback(null, isMatch);\n  });\n};\n\n// const delay = (t, ...vs) => new Promise(r => setTimeout(r, t, ...vs)) or util.promisify(setTimeout)\n\nexport async function hashPassword(password) {\n  const saltRounds = 10;\n\n  const hashedPassword = await new Promise((resolve, reject) => {\n    bcrypt.hash(password, saltRounds, function (err, hash) {\n      if (err) reject(err);\n      else resolve(hash);\n    });\n  });\n\n  return hashedPassword;\n}\n\nexport const validateUser = (user) => {\n  const schema = {\n    avatar: Joi.any(),\n    name: Joi.string().min(2).max(30).required(),\n    username: Joi.string()\n      .min(2)\n      .max(20)\n      .regex(/^[a-zA-Z0-9_]+$/)\n      .required(),\n    password: Joi.string().min(6).max(20).allow('').allow(null),\n  };\n\n  return Joi.validate(user, schema);\n};\n\nconst User = mongoose.model('User', userSchema);\n\nexport default User;\n"],"mappings":"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"}