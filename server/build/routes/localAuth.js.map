{"version":3,"file":"localAuth.js","names":["_express","require","_joi","_interopRequireDefault","_faker","_User","_requireLocalAuth","_validators","obj","__esModule","default","router","Router","post","requireLocalAuth","req","res","token","user","generateJWT","me","toJSON","json","next","error","Joi","validate","body","registerSchema","status","send","message","details","email","password","name","username","existingUser","User","findOne","newUser","provider","avatar","faker","image","registerUser","err","get","logout","_default","exports"],"sources":["../../src/routes/localAuth.js"],"sourcesContent":["import { Router } from 'express';\nimport Joi from 'joi';\nimport faker from 'faker';\n\nimport User from '../models/User';\nimport requireLocalAuth from '../middleware/requireLocalAuth';\nimport { registerSchema } from '../services/validators';\n\nconst router = Router();\n\nrouter.post('/login', requireLocalAuth, (req, res) => {\n  const token = req.user.generateJWT();\n  const me = req.user.toJSON();\n  res.json({ token, me });\n});\n\nrouter.post('/register', async (req, res, next) => {\n  const { error } = Joi.validate(req.body, registerSchema);\n  if (error) {\n    return res.status(422).send({ message: error.details[0].message });\n  }\n\n  const { email, password, name, username } = req.body;\n\n  try {\n    const existingUser = await User.findOne({ email });\n\n    if (existingUser) {\n      return res.status(422).send({ message: 'Email is in use' });\n    }\n\n    try {\n      const newUser = await new User({\n        provider: 'email',\n        email,\n        password,\n        username,\n        name,\n        avatar: faker.image.avatar(),\n      });\n\n      newUser.registerUser(newUser, (err, user) => {\n        if (err) throw err;\n        res.json({ message: 'Register success.' }); // just redirect to login\n      });\n    } catch (err) {\n      return next(err);\n    }\n  } catch (err) {\n    return next(err);\n  }\n});\n\n// logout\nrouter.get('/logout', (req, res) => {\n  req.logout();\n  res.send(false);\n});\n\nexport default router;\n"],"mappings":";;;;;;AAAA,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,IAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,MAAA,GAAAD,sBAAA,CAAAF,OAAA;AAEA,IAAAI,KAAA,GAAAF,sBAAA,CAAAF,OAAA;AACA,IAAAK,iBAAA,GAAAH,sBAAA,CAAAF,OAAA;AACA,IAAAM,WAAA,GAAAN,OAAA;AAAwD,SAAAE,uBAAAK,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAExD,MAAMG,MAAM,GAAG,IAAAC,eAAM,GAAE;AAEvBD,MAAM,CAACE,IAAI,CAAC,QAAQ,EAAEC,yBAAgB,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACpD,MAAMC,KAAK,GAAGF,GAAG,CAACG,IAAI,CAACC,WAAW,EAAE;EACpC,MAAMC,EAAE,GAAGL,GAAG,CAACG,IAAI,CAACG,MAAM,EAAE;EAC5BL,GAAG,CAACM,IAAI,CAAC;IAAEL,KAAK;IAAEG;EAAG,CAAC,CAAC;AACzB,CAAC,CAAC;AAEFT,MAAM,CAACE,IAAI,CAAC,WAAW,EAAE,OAAOE,GAAG,EAAEC,GAAG,EAAEO,IAAI,KAAK;EACjD,MAAM;IAAEC;EAAM,CAAC,GAAGC,YAAG,CAACC,QAAQ,CAACX,GAAG,CAACY,IAAI,EAAEC,0BAAc,CAAC;EACxD,IAAIJ,KAAK,EAAE;IACT,OAAOR,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAEP,KAAK,CAACQ,OAAO,CAAC,CAAC,CAAC,CAACD;IAAQ,CAAC,CAAC;EACpE;EAEA,MAAM;IAAEE,KAAK;IAAEC,QAAQ;IAAEC,IAAI;IAAEC;EAAS,CAAC,GAAGrB,GAAG,CAACY,IAAI;EAEpD,IAAI;IACF,MAAMU,YAAY,GAAG,MAAMC,aAAI,CAACC,OAAO,CAAC;MAAEN;IAAM,CAAC,CAAC;IAElD,IAAII,YAAY,EAAE;MAChB,OAAOrB,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE;MAAkB,CAAC,CAAC;IAC7D;IAEA,IAAI;MACF,MAAMS,OAAO,GAAG,MAAM,IAAIF,aAAI,CAAC;QAC7BG,QAAQ,EAAE,OAAO;QACjBR,KAAK;QACLC,QAAQ;QACRE,QAAQ;QACRD,IAAI;QACJO,MAAM,EAAEC,cAAK,CAACC,KAAK,CAACF,MAAM;MAC5B,CAAC,CAAC;MAEFF,OAAO,CAACK,YAAY,CAACL,OAAO,EAAE,CAACM,GAAG,EAAE5B,IAAI,KAAK;QAC3C,IAAI4B,GAAG,EAAE,MAAMA,GAAG;QAClB9B,GAAG,CAACM,IAAI,CAAC;UAAES,OAAO,EAAE;QAAoB,CAAC,CAAC,CAAC,CAAC;MAC9C,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOe,GAAG,EAAE;MACZ,OAAOvB,IAAI,CAACuB,GAAG,CAAC;IAClB;EACF,CAAC,CAAC,OAAOA,GAAG,EAAE;IACZ,OAAOvB,IAAI,CAACuB,GAAG,CAAC;EAClB;AACF,CAAC,CAAC;;AAEF;AACAnC,MAAM,CAACoC,GAAG,CAAC,SAAS,EAAE,CAAChC,GAAG,EAAEC,GAAG,KAAK;EAClCD,GAAG,CAACiC,MAAM,EAAE;EACZhC,GAAG,CAACc,IAAI,CAAC,KAAK,CAAC;AACjB,CAAC,CAAC;AAAC,IAAAmB,QAAA,GAEYtC,MAAM;AAAAuC,OAAA,CAAAxC,OAAA,GAAAuC,QAAA"}