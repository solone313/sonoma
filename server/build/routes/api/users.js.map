{"version":3,"file":"users.js","names":["_express","require","_multer","_interopRequireDefault","_path","_requireJwtAuth","_User","_interopRequireWildcard","_Message","_seed","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","router","Router","storage","multer","diskStorage","destination","req","file","cb","resolve","__dirname","filename","fileName","originalname","toLowerCase","split","join","Date","now","upload","fileFilter","mimetype","Error","put","requireJwtAuth","single","res","next","tempUser","User","findById","params","id","status","json","message","user","role","error","validateUser","body","details","avatarPath","password","provider","hashPassword","existingUser","findOne","username","updatedUser","avatar","name","keys","forEach","k","undefined","findByIdAndUpdate","$set","new","err","seedDb","me","toJSON","users","find","sort","createdAt","map","m","delete","Message","deleteMany","findByIdAndRemove","_default","exports"],"sources":["../../../src/routes/api/users.js"],"sourcesContent":["import { Router } from 'express';\nimport multer from 'multer';\nimport { resolve } from 'path';\n\nimport requireJwtAuth from '../../middleware/requireJwtAuth';\nimport User, { hashPassword, validateUser } from '../../models/User';\nimport Message from '../../models/Message';\nimport { seedDb } from '../../utils/seed';\n\nconst router = Router();\n\nconst storage = multer.diskStorage({\n  destination: function (req, file, cb) {\n    cb(null, resolve(__dirname, '../../../public/images'));\n  },\n  filename: function (req, file, cb) {\n    const fileName = file.originalname.toLowerCase().split(' ').join('-');\n    cb(null, `avatar-${Date.now()}-${fileName}`);\n  },\n});\n\nconst upload = multer({\n  storage: storage,\n  fileFilter: (req, file, cb) => {\n    if (file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\n      cb(null, true);\n    } else {\n      cb(null, false);\n      return cb(new Error('Only .png, .jpg and .jpeg format allowed!'));\n    }\n  },\n});\n\n//`checkit`, which is probably the option I'd suggest if  `validatem`\n\nrouter.put('/:id', [requireJwtAuth, upload.single('avatar')], async (req, res, next) => {\n  try {\n    const tempUser = await User.findById(req.params.id);\n    if (!tempUser) return res.status(404).json({ message: 'No such user.' });\n    if (!(tempUser.id === req.user.id || req.user.role === 'ADMIN'))\n      return res.status(400).json({ message: 'You do not have privileges to edit this user.' });\n\n    //validate name, username and password\n    const { error } = validateUser(req.body);\n    if (error) return res.status(400).json({ message: error.details[0].message });\n\n    let avatarPath = null;\n    if (req.file) {\n      avatarPath = req.file.filename;\n    }\n\n    // if fb or google user provider dont update password\n    let password = null;\n    if (req.user.provider === 'email' && req.body.password && req.body.password !== '') {\n      password = await hashPassword(req.body.password);\n    }\n\n    const existingUser = await User.findOne({ username: req.body.username });\n    if (existingUser && existingUser.id !== tempUser.id) {\n      return res.status(400).json({ message: 'Username already taken.' });\n    }\n\n    const updatedUser = { avatar: avatarPath, name: req.body.name, username: req.body.username, password };\n    // remove '', null, undefined\n    Object.keys(updatedUser).forEach((k) => !updatedUser[k] && updatedUser[k] !== undefined && delete updatedUser[k]);\n    // console.log(req.body, updatedUser);\n    const user = await User.findByIdAndUpdate(tempUser.id, { $set: updatedUser }, { new: true });\n\n    res.status(200).json({ user });\n  } catch (err) {\n    res.status(500).json({ message: 'Something went wrong.' });\n  }\n});\n\nrouter.get('/reseed', async (req, res) => {\n  await seedDb();\n  res.json({ message: 'Database reseeded successfully.' });\n});\n\nrouter.get('/me', requireJwtAuth, (req, res) => {\n  const me = req.user.toJSON();\n  res.json({ me });\n});\n\nrouter.get('/:username', requireJwtAuth, async (req, res) => {\n  try {\n    const user = await User.findOne({ username: req.params.username });\n    if (!user) return res.status(404).json({ message: 'No user found.' });\n    res.json({ user: user.toJSON() });\n  } catch (err) {\n    res.status(500).json({ message: 'Something went wrong.' });\n  }\n});\n\nrouter.get('/', requireJwtAuth, async (req, res) => {\n  try {\n    const users = await User.find().sort({ createdAt: 'desc' });\n\n    res.json({\n      users: users.map((m) => {\n        return m.toJSON();\n      }),\n    });\n  } catch (err) {\n    res.status(500).json({ message: 'Something went wrong.' });\n  }\n});\n\nrouter.delete('/:id', requireJwtAuth, async (req, res) => {\n  try {\n    const tempUser = await User.findById(req.params.id);\n    if (!tempUser) return res.status(404).json({ message: 'No such user.' });\n    if (!(tempUser.id === req.user.id || req.user.role === 'ADMIN'))\n      return res.status(400).json({ message: 'You do not have privilegies to delete that user.' });\n\n    // if (['email0@email.com', 'email1@email.com'].includes(tempUser.email))\n    //   return res.status(400).json({ message: 'You can not delete seeded user.' });\n\n    //delete all messages from that user\n    await Message.deleteMany({ user: tempUser.id });\n    //delete user\n    const user = await User.findByIdAndRemove(tempUser.id);\n    res.status(200).json({ user });\n  } catch (err) {\n    res.status(500).json({ message: 'Something went wrong.' });\n  }\n});\n\nexport default router;\n"],"mappings":"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"}